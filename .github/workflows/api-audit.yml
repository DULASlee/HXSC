name: API Consistency Audit

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * 1'  # 每周一凌晨2点运行

env:
  DOTNET_VERSION: '8.0.x'
  NODE_VERSION: '18.x'

jobs:
  api-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'src/SmartConstruction.Web/package-lock.json'

    - name: Install frontend dependencies
      run: |
        cd src/SmartConstruction.Web
        npm ci

    - name: Build backend
      run: |
        cd src/SmartConstruction.Service
        dotnet restore
        dotnet build --configuration Release --no-restore

    - name: Extract frontend APIs
      run: |
        cd src/SmartConstruction.Web
        npm run extract-apis > frontend-apis.json || {
          # 如果npm脚本不存在，使用自定义提取
          npx api-extractor --config api-extractor.json || {
            echo "Using custom extraction..."
            node scripts/extract-frontend-apis.js > frontend-apis.json
          }
        }

    - name: Extract backend APIs
      run: |
        cd src/SmartConstruction.Service
        dotnet run --project SmartConstruction.Service.csproj --configuration Release -- extract-apis > backend-apis.json || {
          # 如果内置命令不存在，使用自定义提取
          dotnet run --project SmartConstruction.Service.csproj --configuration Release -- --scan-apis --output backend-apis.json || {
            echo "Using custom extraction..."
            python3 ../scripts/extract-backend-apis.py > backend-apis.json
          }
        }

    - name: Run API consistency check
      run: |
        python3 scripts/api-consistency-check.py \
          --frontend src/SmartConstruction.Web/frontend-apis.json \
          --backend src/SmartConstruction.Service/backend-apis.json \
          --output api-audit-result.json \
          --format json

    - name: Generate audit report
      run: |
        python3 scripts/generate-audit-report.py \
          --input api-audit-result.json \
          --template templates/audit-report.html.j2 \
          --output api-audit-report.html

    - name: Upload audit results
      uses: actions/upload-artifact@v4
      with:
        name: api-audit-results
        path: |
          api-audit-result.json
          api-audit-report.html
          src/SmartConstruction.Web/frontend-apis.json
          src/SmartConstruction.Service/backend-apis.json
        retention-days: 30

    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const result = JSON.parse(fs.readFileSync('api-audit-result.json', 'utf8'));
          
          const summary = `## 🔍 API一致性检测结果
          
          - ✅ **匹配接口**: ${result.summary.matches}
          - ❌ **不匹配接口**: ${result.summary.mismatches}
          - 📊 **匹配率**: ${((result.summary.matches / (result.summary.matches + result.summary.mismatches)) * 100).toFixed(1)}%
          
          ### 需要关注的问题
          ${result.mismatches.slice(0, 5).map(m => `- ${m.description}`).join('\n')}
          
          [查看详细报告](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: summary
          });

    - name: Check consistency threshold
      run: |
        python3 scripts/check-consistency-threshold.py \
          --input api-audit-result.json \
          --threshold 90

    - name: Notify on failure
      if: failure()
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        channel: '#api-audit-alerts'
        text: |
          API一致性检测失败！
          项目: ${{ github.repository }}
          分支: ${{ github.ref }}
          查看详情: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  security-scan:
    runs-on: ubuntu-latest
    needs: api-audit
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'