// =============================================
// 响应式断点系统 - 自动生成响应式逻辑
// =============================================

// 断点定义
$breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1600px
);

// 响应式混合器
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $value: map-get($breakpoints, $breakpoint);
    @if $value == 0 {
      @content;
    } @else {
      @media (min-width: $value) {
        @content;
      }
    }
  } @else {
    @warn "Breakpoint `#{$breakpoint}` not found in $breakpoints.";
  }
}

// 响应式网格系统
@mixin responsive-grid($columns: 12, $gap: var(--spacing-md)) {
  display: grid;
  gap: $gap;
  
  // 默认单列
  grid-template-columns: 1fr;
  
  // 小屏幕 - 2列
  @include respond-to(sm) {
    grid-template-columns: repeat(2, 1fr);
  }
  
  // 中等屏幕 - 3列
  @include respond-to(md) {
    grid-template-columns: repeat(3, 1fr);
  }
  
  // 大屏幕 - 4列
  @include respond-to(lg) {
    grid-template-columns: repeat(4, 1fr);
  }
  
  // 超大屏幕 - 自定义列数
  @include respond-to(xl) {
    grid-template-columns: repeat($columns, 1fr);
  }
}

// 响应式卡片网格
@mixin card-grid {
  @include responsive-grid(4);
  
  .card-item {
    background: var(--bg-container);
    border-radius: var(--radius-lg);
    padding: var(--spacing-lg);
    box-shadow: var(--shadow-sm);
    transition: all 0.3s ease;
    
    &:hover {
      box-shadow: var(--shadow-md);
      transform: translateY(-2px);
    }
  }
}

// 响应式文字大小
@mixin responsive-text($base-size: 14px) {
  font-size: $base-size;
  
  @include respond-to(sm) {
    font-size: $base-size * 1.1;
  }
  
  @include respond-to(md) {
    font-size: $base-size * 1.2;
  }
  
  @include respond-to(lg) {
    font-size: $base-size * 1.3;
  }
}

// 响应式间距
@mixin responsive-spacing($property: padding, $base: var(--spacing-md)) {
  #{$property}: $base;
  
  @include respond-to(sm) {
    #{$property}: calc(#{$base} * 1.2);
  }
  
  @include respond-to(md) {
    #{$property}: calc(#{$base} * 1.4);
  }
  
  @include respond-to(lg) {
    #{$property}: calc(#{$base} * 1.6);
  }
}

// 侧边栏响应式
@mixin sidebar-responsive {
  .sidebar-container {
    width: 250px;
    transition: width 0.28s ease;
    
    &.collapsed {
      width: 64px;
    }
    
    // 移动端隐藏
    @media (max-width: 768px) {
      position: fixed;
      z-index: 1001;
      transform: translateX(-100%);
      
      &.mobile-open {
        transform: translateX(0);
      }
    }
  }
  
  .main-container {
    margin-left: 250px;
    transition: margin-left 0.28s ease;
    
    .sidebar-container.collapsed + & {
      margin-left: 64px;
    }
    
    // 移动端无边距
    @media (max-width: 768px) {
      margin-left: 0;
    }
  }
}

// 导航栏响应式
@mixin navbar-responsive {
  .navbar {
    height: 50px;
    padding: 0 var(--spacing-md);
    
    @include respond-to(sm) {
      padding: 0 var(--spacing-lg);
    }
    
    @include respond-to(md) {
      height: 60px;
      padding: 0 var(--spacing-xl);
    }
    
    .navbar-title {
      @include responsive-text(16px);
      font-weight: 600;
    }
    
    .navbar-actions {
      display: flex;
      align-items: center;
      gap: var(--spacing-sm);
      
      @include respond-to(md) {
        gap: var(--spacing-md);
      }
    }
  }
}

// 表格响应式
@mixin table-responsive {
  .responsive-table {
    overflow-x: auto;
    
    .el-table {
      min-width: 800px;
      
      @include respond-to(lg) {
        min-width: auto;
      }
    }
    
    // 移动端隐藏某些列
    @media (max-width: 768px) {
      .hidden-xs {
        display: none !important;
      }
    }
    
    @media (max-width: 992px) {
      .hidden-sm {
        display: none !important;
      }
    }
  }
}

// 表单响应式
@mixin form-responsive {
  .responsive-form {
    .el-form-item {
      margin-bottom: var(--spacing-md);
      
      @include respond-to(md) {
        margin-bottom: var(--spacing-lg);
      }
    }
    
    .form-grid {
      display: grid;
      gap: var(--spacing-md);
      grid-template-columns: 1fr;
      
      @include respond-to(md) {
        grid-template-columns: repeat(2, 1fr);
      }
      
      @include respond-to(lg) {
        grid-template-columns: repeat(3, 1fr);
      }
    }
    
    .form-actions {
      display: flex;
      gap: var(--spacing-sm);
      justify-content: flex-end;
      margin-top: var(--spacing-lg);
      
      @media (max-width: 576px) {
        flex-direction: column;
        
        .el-button {
          width: 100%;
        }
      }
    }
  }
}

// 工具类生成器
@each $breakpoint, $value in $breakpoints {
  @if $value == 0 {
    // 基础工具类
    .text-#{$breakpoint} {
      @include responsive-text();
    }
    
    .grid-#{$breakpoint} {
      @include responsive-grid();
    }
  } @else {
    // 响应式工具类
    @media (min-width: $value) {
      .text-#{$breakpoint} {
        @include responsive-text();
      }
      
      .grid-#{$breakpoint} {
        @include responsive-grid();
      }
      
      .hidden-#{$breakpoint} {
        display: none !important;
      }
      
      .show-#{$breakpoint} {
        display: block !important;
      }
    }
  }
}